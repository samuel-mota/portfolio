@import "./variables.scss";

@mixin overflowBarCorrection($offset: $positionRight) {
  width: calc(100% + #{$offset});
}

@mixin iconsHoneycomb($iconsAmount, $rowNumber: 2, $rowWidth: 5.25rem, $columnWidth: 6.25rem, $scaleInitial: 100%, $scaleFinal) {
  $columns: ceil($iconsAmount / 2); // math.ceil
  $minmax: minmax($columnWidth, 62rem / $columns);

  .icons {
    display: grid;

    @if $rowNumber > 1 {
      grid-template-columns: repeat($columns, $minmax);
    } @else {
      grid-template-columns: repeat($iconsAmount, $columnWidth);
    }

    grid-template-rows: repeat($rowNumber, $rowWidth);
    grid-auto-flow: column; // change the flow to fill up column first
    place-items: center;
    align-content: center;

    width: 100%;
    height: 100%;

    padding-left: $positionRight;

    position: relative;
    right: $positionRight;

    overflow: auto hidden;

    .icon {
      padding-right: $positionRight;
      padding-left: $positionRight;

      &:hover {
        z-index: 10; // to make shadow be above all icons when hovering
      }

      img {
        transform: scale($scaleInitial);
        transition: filter 1.3s, transform 0.7s;

        &:hover {
          filter: drop-shadow(0px 0px 3px var(--shadow-style));
          transform: scale($scaleFinal);
        }
      }

      @if $rowNumber > 1 {
        &:nth-child(even) {
          position: relative;
          right: -50%;
        }
      }
    }
  }
}

@mixin gradientAnimation($start, $end, $transTime) {
  position: relative;

  z-index: 0;

  &::before {
    content: "";
    display: block;
    height: 100%;
    width: 100%;
    opacity: 0;

    position: absolute;
    top: 0;
    left: 0;
    background-image: linear-gradient($start, $end);

    z-index: -1;

    transition: opacity $transTime;
  }

  &:hover {
    &::before {
      opacity: 1;
    }
  }
}
